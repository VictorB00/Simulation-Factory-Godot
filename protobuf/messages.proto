syntax = "proto2";

package communication_commandes;

message Command {
  enum Command_types {
    GOTO = 0;
    PICKUP = 1;
	GOTO_PATH = 2;
	DROP = 3;
  }
  
  optional Command_types command_name = 1;
  
  optional int32 robot_id = 5;
  
  oneof parameters{
	Pickup_Drop_Parameters pickup_drop_parameters = 2;
	Goto_Parameters goto_parameters = 3;
	Goto_Path_Parameters goto_path_parameters = 4;
  }
  
  message Pickup_Drop_Parameters{
	optional int32 stand_id = 1;
  }
  
  message Goto_Parameters{
	  optional float dir = 1;
	  optional float speed = 2;
	  optional float time =3;
  }
  message Goto_Path_Parameters{
	optional float destination_x = 1;
	optional float destination_y = 2;
  }
}

message State {

	//info about robots
	repeated Robot robots = 1;
	
	message Robot {
		optional float x = 1;
		optional float y = 2;
		optional float battery = 3;
		optional bool is_moving = 4;
	
	}
	
	//info about packages
	repeated Package packages = 2;  
	
	message Package {
		optional Location location = 1;
		repeated Process processes_list = 2;
		optional float delivery_time = 3;
	}
	
	message Location {//contains location of a package
		enum Location_Type {
			ROBOT = 0;
			ARRIVAL = 1;
			MACHINE_INPUT = 2;
			MACHINE_INSIDE = 3;
			MACHINE_OUTPUT = 4;
		}		
		optional Location_Type location_type = 1;
		optional int32 parent_id = 2; //id of the machine of robot in the corresponding cases
	}
	
	message Process{
		optional int32 process_id = 1;
		optional float process_duration = 2;
	}
	
}



message Environment_Description {
 //to be sent at the start of the simulation to give information about the disposition of the world
	repeated Machine machines = 1;
	
	message Machine {
		optional Area_Description input_area = 1;
		optional Area_Description output_area = 2;
		optional int32 input_size = 3;
		optional int32 output_size = 4;
		repeated int32 processes_list = 5;
	}
	
	
	optional Area_Description arrival_area = 2;
	
	optional Area_Description delivery_area = 3;
	
	message Area_Description {//used to describe where are physically located the various belts the robot can int32eract with
	optional float x = 1;
	optional float y = 2;
	optional float width = 3;
	optional float height = 4;
}
}



